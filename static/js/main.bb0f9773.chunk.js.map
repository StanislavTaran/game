{"version":3,"sources":["components/shared/MyButton.jsx","assets/troll.svg","constants/gameParams.js","helpers/getFormatedTimerValue.js","components/StatusBar/StatusBar.jsx","components/GameWrapper/GameWrapper.jsx","components/GameField/GameField.jsx","components/ScoreTable/ScoreTable.jsx","helpers/numberHelpers.js","helpers/classesHelpers.js","components/Portal/Portal.jsx","components/shared/MyInput.jsx","components/ResultForm/ResultForm.jsx","pages/GamePage/GamePage.jsx","hooks/usePesistState.js","components/Header/Header.jsx","components/App/App.jsx","index.jsx"],"names":["StyledButton","styled","button","MyButton","text","onClick","props","GAME_STATUS","defaultScoreList","name","score","activeClasses","BLUE","GREEN","RED","formattedTimeValue","sec","minutes","Math","trunc","seconds","StatusBarWrapper","div","CountBoard","StyledSpan","span","color","StyledImage","img","StatusBar","timeLeft","onStartGame","onStartNewGame","gameStatus","isWaiting","formattedTimer","getFormattedTimerValue","src","imageTroll","alt","StyledGameWrapper","GameWrapper","children","StyledSquareItem","li","StyledSquaresList","ul","arraySquares","Array","from","keys","GameField","React","forwardRef","ref","onClickOnSquare","map","item","id","toString","StyledList","StyledItem","StyledWrapper","ScoreTable","participantsList","sortedParticipantsList","useMemo","sort","a","b","slice","itemId","uuidv4","getRandomNumbers","max","quantity","floor","random","arrOfNumbers","i","number","indexOf","push","getUniqNumber","primaryList","additionalList","uniqNumber","length","getUniqNumbersList","withoutZero","randomQuantity","arrOfUniqNumbers","randomNumber","activeClassesList","Object","values","setActiveClassForElem","elem","randomIdx","classList","add","resetActiveClassForElem","contains","remove","setActiveClassForElements","IdList","parentRef","current","childNodes","StyledPortal","Portal","createPortal","document","getElementById","StyledInput","input","MyInput","StyledFormContainer","StyledTitle","h2","StyledForm","form","StyledParagraph","p","ResultForm","onSubmitForm","onSubmit","placeholder","maxLength","type","StyledPageWrapper","GamePage","useState","isOpenModal","setIsOpenModal","setGameStatus","timerValue","setTimerValue","scoreValue","setScoreValue","squaresIdList","setSquaresIdList","key","defaultValue","JSON","parse","localStorage","getItem","scoreList","setScoreList","useEffect","setItem","stringify","usePersistedState","listSquaresRef","createRef","handleSetTimerValue","useCallback","timer","setInterval","clearInterval","uniqNumbers","e","preventDefault","nameTargetValue","target","value","data","state","prevStatusGame","setTimeout","resetActiveClassForElements","elemId","isSquareActive","Number","newRandomNumbers","filter","StyledHeader","header","StyledTitleLogo","h1","Header","StyledAppWrapper","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bb0f9773.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  margin: 5px;\n  padding: 10px;\n  border: 2px solid tomato;\n  border-color: tomato;\n  border-radius: 6px;\n  width: 120px;\n  transition: 0.3s all;\n  font-weight: 700;\n\n  &:hover {\n    cursor: pointer;\n    background-color: #00bcd4;\n    color: #fff;\n  }\n`;\n\nconst MyButton = ({ text, onClick, ...props }) => {\n  return (\n    <StyledButton onClick={onClick} {...props}>\n      {text}\n    </StyledButton>\n  );\n};\n\nexport default MyButton;\n","export default __webpack_public_path__ + \"static/media/troll.268fb79f.svg\";","export const SQUARES_QTY = 63;\r\nexport const INITIAL_TIMER_VALUE = 60;\r\nexport const SQUARES_QTY_ON_FIELD = 5;\r\n\r\nexport const GAME_STATUS = {\r\n  PENDING: 'pending',\r\n  GAME_OVER: 'over',\r\n  GAME_ON: 'on',\r\n  PAUSE: 'pause'\r\n};\r\n\r\nexport const defaultScoreList = [\r\n  { name: 'Unknown', score: 120 },\r\n  { name: 'John Doe', score: 113 },\r\n  { name: 'Black_Fox', score: 111 },\r\n];\r\n\r\n\r\nexport const activeClasses = {\r\n  BLUE: 'square-blue',\r\n  GREEN: 'square-green',\r\n  RED: 'square-red'\r\n}","const formattedTimeValue = sec => {\n  const minutes = Math.trunc(sec / 60);\n  const seconds = sec - minutes * 60;\n  return `0${minutes} : ${seconds > 9 ? seconds : '0' + seconds}`;\n};\nexport default formattedTimeValue;\n","import React from 'react';\nimport styled from 'styled-components';\nimport MyButton from '../shared/MyButton';\nimport imageTroll from '../../assets/troll.svg';\nimport { GAME_STATUS } from '../../constants/gameParams';\nimport getFormattedTimerValue from \"../../helpers/getFormatedTimerValue\";\n\nconst StatusBarWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nconst CountBoard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst StyledSpan = styled.span`\n  color: ${props => (props.color ? props.color : '#000')};\n`;\n\nconst StyledImage = styled.img`\n  display: block;\n  width: 80px;\n  height: auto;\n`;\n\nconst StatusBar = ({ timeLeft, score, onStartGame, onStartNewGame, gameStatus }) => {\n  const isWaiting = gameStatus === GAME_STATUS.PAUSE || gameStatus === GAME_STATUS.PENDING;\n  ;\n\n  const formattedTimer = getFormattedTimerValue(timeLeft)\n\n  return (\n    <StatusBarWrapper>\n      <StyledImage src={imageTroll} alt=\"troll\" />\n      <MyButton text={isWaiting ? 'Start' : 'Pause'} onClick={onStartGame} />\n      <MyButton text=\"New Game\" onClick={onStartNewGame} />\n      <CountBoard>\n        <StyledSpan>Points</StyledSpan>\n        <StyledSpan color=\"#318010\">{score}</StyledSpan>\n      </CountBoard>\n      <CountBoard>\n        <StyledSpan>Time left</StyledSpan>\n        <StyledSpan color=\"#ff0000\">{formattedTimer}</StyledSpan>\n      </CountBoard>\n    </StatusBarWrapper>\n  );\n};\n\nexport default StatusBar;\n","import React  from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledGameWrapper = styled.div`\r\n  width: 700px;\r\n  height: 586px;\r\n  padding: 5px;\r\n  border: 2px solid tomato;\r\n  border-radius: 30px 30px 20px 20px;\r\n`;\r\n\r\nconst GameWrapper = ({ children }) => {\r\n  return <StyledGameWrapper>{children}</StyledGameWrapper>;\r\n};\r\n\r\nexport default GameWrapper;\r\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { SQUARES_QTY } from '../../constants/gameParams';\n\n\nconst StyledSquareItem = styled.li`\n  width: 68px;\n  height: 68px;\n  margin: 0;\n  padding: 0;\n  border: 2px solid #fff;\n  border-radius: 8px;\n  background-color: '#a0a0a0';\n  transition-property: background-color;\n  transition-duration: 0.3s;\n`;\n\nconst StyledSquaresList = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nconst arraySquares = Array.from(Array(SQUARES_QTY).keys());\n\nconst GameField = React.forwardRef(({ onClickOnSquare }, ref) => {\n  return (\n    <StyledSquaresList ref={ref} onClick={onClickOnSquare}>\n      {arraySquares.map(item => (\n        <StyledSquareItem key={item} id={item.toString()}></StyledSquareItem>\n      ))}\n    </StyledSquaresList>\n  );\n});\n\nexport default GameField;\n","import React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst StyledList = styled.ul`\n  font-size: 14px;\n  list-style: decimal;\n  margin: 0 10px;\n`;\n\nconst StyledItem = styled.li`\n  font-size: 14px;\n  list-style: decimal;\n  margin: 6px 0;\n  padding: 0;\n`;\n\nconst StyledWrapper = styled.div`\n  align-self: flex-start;\n`;\n\nconst ScoreTable = ({ participantsList }) => {\n  const sortedParticipantsList = useMemo(() => participantsList.sort((a, b) => b.score - a.score).slice(0, 10), [\n    participantsList,\n  ]);\n  return (\n    <StyledWrapper>\n      <h3>Best Players</h3>\n      <StyledList>\n        {sortedParticipantsList.map(item => {\n          const itemId = uuidv4();\n          return (\n            <StyledItem key={itemId}>\n              <span>{`${item.name} : ${item.score}`}</span>\n            </StyledItem>\n          );\n        })}\n      </StyledList>\n    </StyledWrapper>\n  );\n};\n\nexport default ScoreTable;\n","import { SQUARES_QTY } from '../constants/gameParams';\n\nexport const getRandomNumbers = (max, quantity = 1) => {\n  if (quantity === 1) {\n    return Math.floor(Math.random() * Math.floor(max));\n  } else if (quantity > 1) {\n    const arrOfNumbers = [];\n    for (let i = 0; i < quantity; i++) {\n      const number = getRandomNumbers(max);\n      if (arrOfNumbers.indexOf(number) > -1) continue;\n      arrOfNumbers.push(number);\n    }\n    return arrOfNumbers;\n  } else return;\n};\n\nexport const getUniqNumber = (primaryList, additionalList = []) => {\n  let uniqNumber = getRandomNumbers(SQUARES_QTY, 1);\n  if (additionalList.length) {\n    if (additionalList.indexOf(uniqNumber) > -1) {\n      uniqNumber = getUniqNumber(primaryList, additionalList);\n    }\n  }\n  if (primaryList.indexOf(uniqNumber) === -1 && uniqNumber !== 0) {\n    return uniqNumber;\n  } else return getUniqNumber(primaryList, additionalList);\n};\n\nexport const getUniqNumbersList = (primaryList, withoutZero = false) => {\n  const randomQuantity = getRandomNumbers(3, 1);\n  if (withoutZero && randomQuantity === 0) {\n    return getUniqNumbersList(primaryList, withoutZero);\n  }\n  if (randomQuantity === 0) {\n    return [];\n  } else {\n    const arrOfUniqNumbers = [];\n    for (let i = 0; i < randomQuantity; i++) {\n      let randomNumber = getUniqNumber(primaryList, arrOfUniqNumbers);\n\n      arrOfUniqNumbers.push(randomNumber);\n    }\n    return arrOfUniqNumbers;\n  }\n};\n","import {activeClasses} from \"../constants/gameParams\";\r\nimport {getRandomNumbers} from \"./numberHelpers\";\r\n\r\nconst activeClassesList = Object.values(activeClasses);\r\n\r\nexport const setActiveClassForElem = elem => {\r\n    const randomIdx = getRandomNumbers(activeClassesList.length);\r\n    return elem.classList.add(activeClassesList[randomIdx]);\r\n};\r\n\r\nexport   const resetActiveClassForElem = elem => {\r\n    switch (true) {\r\n        case elem.classList.contains(activeClasses.GREEN):\r\n            elem.classList.remove(activeClasses.GREEN);\r\n            break;\r\n        case elem.classList.contains(activeClasses.BLUE):\r\n            elem.classList.remove(activeClasses.BLUE);\r\n            break;\r\n        case elem.classList.contains(activeClasses.RED):\r\n            elem.classList.remove(activeClasses.RED);\r\n            break;\r\n        default:\r\n            return;\r\n    }\r\n};\r\n\r\nexport const setActiveClassForElements = (IdList, parentRef) => {\r\n    for (let item of IdList) {\r\n        const elem = parentRef.current.childNodes[item.toString()];\r\n        setActiveClassForElem(elem);\r\n    }\r\n};\r\n\r\nexport const resetActiveClassForElements = (IdList, parentRef) => {\r\n    for (let item of IdList) {\r\n        const elem = parentRef.current.childNodes[item.toString()];\r\n        resetActiveClassForElem(elem);\r\n    }\r\n};\r\n\r\n\r\n\r\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport styled from 'styled-components';\n\nconst StyledPortal = styled.div`\n  display: flex;\n  justify-content: center;\n  background-color: #ffe4c4a6;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  \n`;\n\nfunction Portal({ children }) {\n  return createPortal(<StyledPortal>{children}</StyledPortal>, document.getElementById('modal'));\n}\n\nexport default Portal;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  margin: 5px;\n  padding: 0;\n  border: 2px solid tomato;\n  border-color: tomato;\n  border-radius: 6px;\n  width: 360px;\n  height: 40px;\n  text-align: center;\n  font-size: 26px;\n  }\n`;\n\nconst MyInput = props => {\n  return <StyledInput {...props} />;\n};\n\nexport default MyInput;\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport MyButton from '../shared/MyButton';\r\nimport MyInput from '../shared/MyInput';\r\n\r\nconst StyledFormContainer = styled.div`\r\n  width: 400px;\r\n  margin: 0 auto;\r\n  border-radius: 8px;\r\n  border: 2px solid #178585;\r\n  background-color: #deb887;\r\n`;\r\n\r\nexport const StyledTitle = styled.h2`\r\n  margin: 20px auto;\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  width: 100%;\r\n  height: 140px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyledParagraph = styled.p`\r\n  text-align: center;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst ResultForm = ({ onSubmitForm, score }) => {\r\n  return (\r\n    <StyledFormContainer>\r\n      <StyledTitle>game over</StyledTitle>\r\n      <StyledParagraph>{`Score: ${score}`}</StyledParagraph>\r\n      <StyledForm onSubmit={onSubmitForm}>\r\n        <label>Name </label>\r\n        <MyInput name=\"name\" placeholder=\"Enter your name\" maxLength='10'/>\r\n\r\n        <MyButton text=\"SAVE\" type='submit' />\r\n      </StyledForm>\r\n    </StyledFormContainer>\r\n  );\r\n};\r\n\r\nexport default ResultForm;\r\n","import React, { useState, useEffect, useCallback } from 'react';\nimport StatusBar from '../../components/StatusBar/StatusBar';\nimport GameWrapper from '../../components/GameWrapper/GameWrapper';\nimport GameField from '../../components/GameField/GameField';\nimport ScoreTable from '../../components/ScoreTable/ScoreTable';\nimport { getRandomNumbers, getUniqNumbersList } from '../../helpers/numberHelpers';\nimport {\n  resetActiveClassForElem,\n  setActiveClassForElements,\n  resetActiveClassForElements,\n} from '../../helpers/classesHelpers';\nimport {\n  SQUARES_QTY,\n  INITIAL_TIMER_VALUE,\n  SQUARES_QTY_ON_FIELD,\n  GAME_STATUS,\n  defaultScoreList,\n} from '../../constants/gameParams';\nimport Portal from '../../components/Portal/Portal';\nimport ResultForm from '../../components/ResultForm/ResultForm';\nimport usePersistedState from '../../hooks/usePesistState';\nimport styled from 'styled-components';\n\nconst StyledPageWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n`;\n\nconst GamePage = () => {\n  let [isOpenModal, setIsOpenModal] = useState(false);\n  let [gameStatus, setGameStatus] = useState(GAME_STATUS.PENDING);\n  let [timerValue, setTimerValue] = useState(INITIAL_TIMER_VALUE);\n  let [scoreValue, setScoreValue] = useState(0);\n  const [squaresIdList, setSquaresIdList] = useState(getRandomNumbers(SQUARES_QTY, SQUARES_QTY_ON_FIELD));\n  const [scoreList, setScoreList] = usePersistedState('score_list', defaultScoreList);\n\n  const listSquaresRef = React.createRef();\n\n  const handleSetTimerValue = useCallback(() => {\n    setTimerValue(timerValue => timerValue - 1);\n  }, []);\n\n  const handleStartGame = () => {\n    if (gameStatus === GAME_STATUS.GAME_OVER) return;\n    if (timerValue === INITIAL_TIMER_VALUE || gameStatus === GAME_STATUS.PAUSE) {\n      const prevStatusGame = gameStatus;\n      setGameStatus(GAME_STATUS.GAME_ON);\n      setTimeout(() => {\n        handleSetTimerValue();\n      }, 1000);\n      if (prevStatusGame === GAME_STATUS.PENDING) {\n        setActiveClassForElements(squaresIdList, listSquaresRef);\n      }\n    } else {\n      setGameStatus(GAME_STATUS.PAUSE);\n    }\n  };\n\n  const handleStartNewGame = () => {\n    if (timerValue === INITIAL_TIMER_VALUE) return;\n    setGameStatus(GAME_STATUS.PENDING);\n    setScoreValue(0);\n    setTimerValue(INITIAL_TIMER_VALUE);\n    resetActiveClassForElements(squaresIdList, listSquaresRef);\n    setSquaresIdList(getRandomNumbers(SQUARES_QTY, SQUARES_QTY_ON_FIELD));\n  };\n\n  const handleClickOnSquare = e => {\n    const elemId = e.target.id;\n    const isSquareActive = squaresIdList.indexOf(Number(elemId)) > -1;\n\n    if (gameStatus === GAME_STATUS.GAME_ON && isSquareActive) {\n      setScoreValue(scoreValue => scoreValue + 1);\n      const newRandomNumbers = getUniqNumbersList(squaresIdList);\n\n      e.target.classList.add('hinge')\n      setTimeout(()=>{\n        resetActiveClassForElem(e.target);\n        e.target.classList.remove('hinge')\n      },1000)\n\n      setSquaresIdList(state => [...state.filter(item => item !== Number(elemId))]);\n      if (newRandomNumbers.length) {\n        setSquaresIdList(state => [...state, ...newRandomNumbers]);\n        setActiveClassForElements(newRandomNumbers, listSquaresRef);\n      }\n    }\n  };\n\n  const handleSubmitResultForm = e => {\n    e.preventDefault();\n    const nameTargetValue = e.target[0].value;\n    const data = { name: nameTargetValue.length ? nameTargetValue : 'Unknown', score: scoreValue };\n    setScoreList(state => [...state, data]);\n    setIsOpenModal(false);\n  };\n\n  useEffect(() => {\n    let timer;\n    if (gameStatus === GAME_STATUS.GAME_ON) {\n      timer = setInterval(() => {\n        handleSetTimerValue();\n      }, 1000);\n      if (timerValue < 1) {\n        setGameStatus(GAME_STATUS.GAME_OVER);\n        setIsOpenModal(true);\n        clearInterval(timer);\n      }\n    }\n    return () => {\n      clearInterval(timer);\n    };\n  }, [timerValue]);\n\n  useEffect(() => {\n    if (squaresIdList.length < 1) {\n      const uniqNumbers = getUniqNumbersList(squaresIdList, true);\n      setSquaresIdList(() => [...uniqNumbers]);\n      setActiveClassForElements(uniqNumbers, listSquaresRef);\n    }\n  }, [squaresIdList]);\n\n  return (\n    <StyledPageWrapper>\n      <GameWrapper>\n        {isOpenModal && (\n          <Portal>\n            <ResultForm onSubmitForm={handleSubmitResultForm} score={scoreValue} />\n          </Portal>\n        )}\n        <StatusBar\n          gameStatus={gameStatus}\n          timeLeft={timerValue}\n          score={scoreValue}\n          onStartGame={handleStartGame}\n          onStartNewGame={handleStartNewGame}\n        />\n        <GameField onClickOnSquare={handleClickOnSquare} ref={listSquaresRef} />\n      </GameWrapper>\n      {scoreList ? <ScoreTable participantsList={scoreList} /> : null}\n    </StyledPageWrapper>\n  );\n};\n\nexport default GamePage;\n","import { useEffect, useState } from 'react';\n\nexport default function usePersistedState(key, defaultValue) {\n  const [scoreList, setScoreList] = useState(() => JSON.parse(localStorage.getItem(key)) || defaultValue);\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(scoreList));\n  }, [key, scoreList]);\n  return [scoreList, setScoreList];\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledHeader = styled.header`\n  background-color: tomato;\n  height: 80px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledTitleLogo = styled.h1`\n  text-align: center;\n  margin: 0;\n  color: #751f6b;\n  font-style: italic;\n`;\n\nconst Header = () => {\n  return <StyledHeader>\n      <StyledTitleLogo>Catch the Square</StyledTitleLogo>\n  </StyledHeader>;\n};\n\nexport default Header;\n","import React from 'react';\r\nimport GamePage from '../../pages/GamePage/GamePage';\r\nimport styled from 'styled-components';\r\nimport Header from '../Header/Header';\r\n\r\nconst StyledAppWrapper = styled.div`\r\n  margin: 0;\r\n  padding: 10px 0 0 0;\r\n  background-color: #e2dfdf;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <StyledAppWrapper>\r\n        <GamePage />\r\n      </StyledAppWrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}